/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenGateway,
  TokenGatewayInterface,
} from "../../contracts/TokenGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "source",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "AssetReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LiquidityProvided",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "from",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "to",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "redeem",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestCommitment",
        type: "bytes32",
      },
    ],
    name: "Teleport",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "host",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapV2Router",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "hyperbridge",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "relayerFeePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protocolFeePercentage",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "erc20",
                type: "address",
              },
              {
                internalType: "address",
                name: "erc6160",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
              },
            ],
            internalType: "struct Asset[]",
            name: "assets",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "callDispatcher",
            type: "address",
          },
        ],
        internalType: "struct InitParams",
        name: "initialParams",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "source",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "dest",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "from",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "to",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "timeoutTimestamp",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "body",
            type: "bytes",
          },
        ],
        internalType: "struct PostRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "onAccept",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "source",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "dest",
                type: "bytes",
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
              },
              {
                internalType: "bytes",
                name: "from",
                type: "bytes",
              },
              {
                internalType: "uint64",
                name: "timeoutTimestamp",
                type: "uint64",
              },
              {
                internalType: "bytes[]",
                name: "keys",
                type: "bytes[]",
              },
              {
                internalType: "uint64",
                name: "height",
                type: "uint64",
              },
            ],
            internalType: "struct GetRequest",
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "key",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "value",
                type: "bytes",
              },
            ],
            internalType: "struct StorageValue[]",
            name: "values",
            type: "tuple[]",
          },
        ],
        internalType: "struct GetResponse",
        name: "",
        type: "tuple",
      },
    ],
    name: "onGetResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "source",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "dest",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "from",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "timeoutTimestamp",
            type: "uint64",
          },
          {
            internalType: "bytes[]",
            name: "keys",
            type: "bytes[]",
          },
          {
            internalType: "uint64",
            name: "height",
            type: "uint64",
          },
        ],
        internalType: "struct GetRequest",
        name: "",
        type: "tuple",
      },
    ],
    name: "onGetTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "source",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "dest",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "from",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "to",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "timeoutTimestamp",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "body",
            type: "bytes",
          },
        ],
        internalType: "struct PostRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "onPostRequestTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "source",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "dest",
                type: "bytes",
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
              },
              {
                internalType: "bytes",
                name: "from",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "to",
                type: "bytes",
              },
              {
                internalType: "uint64",
                name: "timeoutTimestamp",
                type: "uint64",
              },
              {
                internalType: "bytes",
                name: "body",
                type: "bytes",
              },
            ],
            internalType: "struct PostRequest",
            name: "request",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "response",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "timeoutTimestamp",
            type: "uint64",
          },
        ],
        internalType: "struct PostResponse",
        name: "",
        type: "tuple",
      },
    ],
    name: "onPostResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "source",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "dest",
                type: "bytes",
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
              },
              {
                internalType: "bytes",
                name: "from",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "to",
                type: "bytes",
              },
              {
                internalType: "uint64",
                name: "timeoutTimestamp",
                type: "uint64",
              },
              {
                internalType: "bytes",
                name: "body",
                type: "bytes",
              },
            ],
            internalType: "struct PostRequest",
            name: "request",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "response",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "timeoutTimestamp",
            type: "uint64",
          },
        ],
        internalType: "struct PostResponse",
        name: "",
        type: "tuple",
      },
    ],
    name: "onPostResponseTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "assetId",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "redeem",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "dest",
            type: "bytes",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "amountInMax",
            type: "uint256",
          },
        ],
        internalType: "struct TeleportParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "teleport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002a2438038062002a2483398101604081905262000034916200005a565b600280546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b612988806200009c6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c492e4261161005b578063c492e426146100db578063deae54f5146100ee578063eaee1caa146100fc578063feff7fa81461008d57600080fd5b80630bc37bab1461008d57806355585fc7146100a257806372a8da00146100b5578063bc0dd447146100c8575b600080fd5b6100a061009b3660046119a5565b61010f565b005b6100a06100b0366004611c10565b61016b565b6100a06100c3366004611d00565b610230565b6100a06100d6366004611dfd565b610877565b6100a06100e9366004611fb3565b610aa7565b6100a06100e9366004611fef565b6100a061010a366004611dfd565b610afb565b60405162461bcd60e51b815260206004820152602660248201527f49736d704d6f64756c6520646f65736e277420656d697420506f737420726573604482015265706f6e73657360d01b60648201526084015b60405180910390fd5b6002546001600160a01b031633146101955760405162461bcd60e51b81526004016101629061214c565b8051600180546001600160a01b0319166001600160a01b0390921691909117905560408101516000906101c8908261220d565b50608081015160045560608101516003556020810151600580546001600160a01b039283166001600160a01b03199182161790915560c08301516006805491909316911617905560a081015161021d90610c03565b50600280546001600160a01b0319169055565b60808101516102815760405162461bcd60e51b815260206004820152601e60248201527f4275726e20796f75722066756e647320736f6d65206f746865722077617900006044820152606401610162565b8051620186a0106102c55760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e7420746f6f206c6f7760901b6044820152606401610162565b60a08101516001600160a01b03166103185760405162461bcd60e51b8152602060048201526016602482015275119959481d1bdad95b881b9bdd081cd95b1958dd195960521b6044820152606401610162565b6040818101805160009081526008602090815283822054925182526007815283822054600154855163647846a560e01b81529551339687966001600160a01b03908116969481169593169263647846a5926004808401938290030181865afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac91906122cc565b90506000808761010001515111610451576040518060a001604052808860000151815260200188604001518152602001886060015115158152602001868152602001886080015181525060405160200161043d9190600060a0820190508251825260208301516020830152604083015115156040830152606083015160608301526080830151608083015292915050565b6040516020818303038152906040526104b5565b6040518060c001604052808860000151815260200188604001518152602001886060015115158152602001868152602001886080015181526020018861010001518152506040516020016104a59190612339565b6040516020818303038152906040525b90506001600160a01b038416158015906104d157508660600151155b1561062a5786516040516323b872dd60e01b81526001600160a01b0388811660048301523060248301526044820192909252908516906323b872dd906064016020604051808303816000875af115801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190612388565b61059f5760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420757365722062616c616e6365000000000000006044820152606401610162565b60006105af886020015183610c96565b90508760a001516001600160a01b0316836001600160a01b031614610624576105e4878960a0015185848c6101200151610d3c565b6106245760405162461bcd60e51b8152602060048201526011602482015270151bdad95b881cddd85c0819985a5b1959607a1b6044820152606401610162565b506106e6565b6001600160a01b0383161561069e5786516040516344d1718760e01b81526001600160a01b038516916344d1718791610667918a916004016123a5565b600060405180830381600087803b15801561068157600080fd5b505af1158015610695573d6000803e3d6000fd5b505050506106e6565b60405162461bcd60e51b815260206004820152601860248201527f556e6b6e6f776e20546f6b656e204964656e74696669657200000000000000006044820152606401610162565b60006040518060c001604052808960c00151815260200130604051602001610721919060609190911b6001600160601b031916815260140190565b60405160208183030381529060405281526020018360405160200161074691906123cd565b60405160208183030381529060405281526020018960e001516001600160401b0316815260200189602001518152602001336001600160a01b031681525090506000600160009054906101000a90046001600160a01b03166001600160a01b031663b8f3e8f5836040518263ffffffff1660e01b81526004016107c991906123f3565b6020604051808303816000875af11580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c9190612487565b6080808b01518b516060808e0151604080518e81526020810195909552840192909252901515908201529081018290529091507f101ae18084a5b8b595c3474d1cffda13673971c347f8136d216134a6102592d39060a00160405180910390a1505050505050505050565b6001546001600160a01b031633146108a15760405162461bcd60e51b81526004016101629061214c565b60006108b060c08301836124a0565b6108be9160019082906124ed565b8101906108cb9190612517565b60208181018051600090815260088352604080822054925182526007909352919091205460608301519293506001600160a01b0391821692911690821580159061091757508360400151155b156109e457835160405163a9059cbb60e01b81526001600160a01b03838116600483015260248201929092529084169063a9059cbb906044016020604051808303816000875af115801561096f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109939190612388565b6109df5760405162461bcd60e51b815260206004820152601d60248201527f476174657761793a20496e73756666696369656e742042616c616e63650000006044820152606401610162565b610aa0565b6001600160a01b03821615610a585783516040516394d008ef60e01b81526001600160a01b038416916394d008ef91610a219185916004016123a5565b600060405180830381600087803b158015610a3b57600080fd5b505af1158015610a4f573d6000803e3d6000fd5b50505050610aa0565b60405162461bcd60e51b815260206004820152601b60248201527f476174657761793a20496e636f6e73697374656e7420537461746500000000006044820152606401610162565b5050505050565b60405162461bcd60e51b8152602060048201526024808201527f49736d704d6f64756c6520646f65736e277420656d69742047657420726571756044820152636573747360e01b6064820152608401610162565b6001546001600160a01b03163314610b255760405162461bcd60e51b81526004016101629061214c565b6000610b3460c08301836124a0565b6000818110610b4557610b4561258e565b919091013560f81c90506001811115610b6057610b606125a4565b90506000816001811115610b7657610b766125a4565b03610ba85760a1610b8a60c08401846124a0565b90501115610b9f57610b9b82610fc8565b5050565b610b9b82611186565b6001816001811115610bbc57610bbc6125a4565b03610bca57610b9b82611242565b60405162461bcd60e51b815260206004820152600e60248201526d2ab735b737bbb71020b1ba34b7b760911b6044820152606401610162565b805160005b81811015610c91576000838281518110610c2457610c2461258e565b60209081029190910181015180516040808301805160009081526008865282812080546001600160a01b03199081166001600160a01b0396871617909155948601519151815260079095529320805490921692169190911790555080610c89816125d0565b915050610c08565b505050565b600080838351600160009054906101000a90046001600160a01b03166001600160a01b031663641d729d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d139190612487565b610d1d91906125e9565b610d28906001612600565b610d329190612600565b9150505b92915050565b604080516002808252606082018352600092839291906020830190803683370190505090508581600081518110610d7557610d7561258e565b60200260200101906001600160a01b031690816001600160a01b0316815250508481600181518110610da957610da961258e565b6001600160a01b0392831660209182029290920101526040516323b872dd60e01b8152888216600482015230602482015260448101859052908716906323b872dd906064016020604051808303816000875af1158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e319190612388565b610e7d5760405162461bcd60e51b815260206004820152601f60248201527f696e73756666696369656e7420696e74656e6465642066656520746f6b656e006044820152606401610162565b60055460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529087169063095ea7b3906044016020604051808303816000875af1158015610ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef49190612388565b610f325760405162461bcd60e51b815260206004820152600f60248201526e30b8383937bb32903330b4b632b21760891b6044820152606401610162565b6005546001600160a01b0316638803dbee8585848b610f534261012c612600565b6040518663ffffffff1660e01b8152600401610f73959493929190612613565b6000604051808303816000875af1158015610f92573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fba9190810190612684565b506001979650505050505050565b6040516001600160601b03193060601b166020820152611040906034015b60408051601f1981840301815291905261100360608401846124a0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506114109050565b61105c5760405162461bcd60e51b815260040161016290612714565b600061106b60c08301836124a0565b6110799160019082906124ed565b8101906110869190612742565b90506000611095826080015190565b90506110af8260200151836040015184600001518461143a565b60065460a0830151604051637fa0e44b60e01b81526001600160a01b0390921691637fa0e44b916110e5918591906004016127eb565b6000604051808303816000875af1158015611104573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261112c919081019061280f565b507fbf1d856ec885d8e77d926078e66346650473cf972d35813f7b3e5c5f3edcb5d3905061115a84806124a0565b61116a606087016040880161289c565b604051611179939291906128b7565b60405180910390a1505050565b6040516001600160601b03193060601b1660208201526111a890603401610fe6565b6111c45760405162461bcd60e51b815260040161016290612714565b60006111d360c08301836124a0565b6111e19160019082906124ed565b8101906111ee9190612517565b905060006111fd826080015190565b90506112178260200151836040015184600001518461143a565b7fbf1d856ec885d8e77d926078e66346650473cf972d35813f7b3e5c5f3edcb5d361115a84806124a0565b6112de600080546112529061218d565b80601f016020809104026020016040519081016040528092919081815260200182805461127e9061218d565b80156112cb5780601f106112a0576101008083540402835291602001916112cb565b820191906000526020600020905b8154815290600101906020018083116112ae57829003601f168201915b5061100393508692508291506124a09050565b6112fa5760405162461bcd60e51b815260040161016290612714565b600061130960c08301836124a0565b600181811061131a5761131a61258e565b919091013560f81c90506002811115611335576113356125a4565b9050600081600281111561134b5761134b6125a4565b0361138057610b9b61136060c08401846124a0565b61136e9160029082906124ed565b81019061137b91906128f9565b610c03565b6001816002811115611394576113946125a4565b036113c8576113a660c08301836124a0565b6113b49160029082906124ed565b8101906113c1919061292d565b6003555050565b60028160028111156113dc576113dc6125a4565b03610bca576113ee60c08301836124a0565b6113fc9160029082906124ed565b810190611409919061292d565b6004555050565b6000815183511461142357506000610d36565b508151602091820181902091909201919091201490565b6000848152600860209081526040808320546007909252909120546001600160a01b039182169116811580159061146e5750845b1561155657600061147e856117e3565b9050600061148c8287612946565b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018390529192509085169063a9059cbb906044016020604051808303816000875af11580156114df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115039190612388565b61154f5760405162461bcd60e51b815260206004820152601d60248201527f476174657761793a20496e73756666696369656e742042616c616e63650000006044820152606401610162565b50506117db565b6001600160a01b0382161580159061157657506001600160a01b03811615155b8015611580575084155b1561171557600061159085611801565b9050600061159e8287612946565b6040516323b872dd60e01b81523260048201526001600160a01b03878116602483015260448201839052919250908516906323b872dd906064016020604051808303816000875af11580156115f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161b9190612388565b6116755760405162461bcd60e51b815260206004820152602560248201527f476174657761793a20496e73756666696369656e742072656c617965722062616044820152646c616e636560d81b6064820152608401610162565b60408051328152602081018390527fccb2ae3a2936bf4c94fa4e12cdf0cdad6ed0e4888a044cef89afa60f2e4b92d3910160405180910390a16040516394d008ef60e01b81526001600160a01b038416906394d008ef906116dc9032908a906004016123a5565b600060405180830381600087803b1580156116f657600080fd5b505af115801561170a573d6000803e3d6000fd5b5050505050506117db565b6001600160a01b03811615611789576040516394d008ef60e01b81526001600160a01b038216906394d008ef9061175290869088906004016123a5565b600060405180830381600087803b15801561176c57600080fd5b505af1158015611780573d6000803e3d6000fd5b505050506117db565b60405162461bcd60e51b815260206004820152602160248201527f476174657761793a20556e6b6e6f776e20546f6b656e204964656e74696669656044820152603960f91b6064820152608401610162565b505050505050565b6000620186a0600454836117f791906125e9565b610d369190612959565b6000620186a0600354836117f791906125e9565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561184d5761184d611815565b60405290565b60405160e081016001600160401b038111828210171561184d5761184d611815565b60405161014081016001600160401b038111828210171561184d5761184d611815565b604080519081016001600160401b038111828210171561184d5761184d611815565b60405160c081016001600160401b038111828210171561184d5761184d611815565b604051601f8201601f191681016001600160401b038111828210171561190457611904611815565b604052919050565b60006001600160401b0382111561192557611925611815565b50601f01601f191660200190565b600082601f83011261194457600080fd5b81356119576119528261190c565b6118dc565b81815284602083860101111561196c57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160401b03811681146119a057600080fd5b919050565b6000602082840312156119b757600080fd5b81356001600160401b03808211156119ce57600080fd5b90830190606082860312156119e257600080fd5b6119ea61182b565b8235828111156119f957600080fd5b830160e08188031215611a0b57600080fd5b611a13611853565b813584811115611a2257600080fd5b611a2e89828501611933565b825250602082013584811115611a4357600080fd5b611a4f89828501611933565b602083015250611a6160408301611989565b6040820152606082013584811115611a7857600080fd5b611a8489828501611933565b606083015250608082013584811115611a9c57600080fd5b611aa889828501611933565b608083015250611aba60a08301611989565b60a082015260c082013584811115611ad157600080fd5b611add89828501611933565b60c083015250825250602083013582811115611af857600080fd5b611b0487828601611933565b602083015250611b1660408401611989565b604082015295945050505050565b6001600160a01b0381168114611b3957600080fd5b50565b80356119a081611b24565b60006001600160401b03821115611b6057611b60611815565b5060051b60200190565b600082601f830112611b7b57600080fd5b81356020611b8b61195283611b47565b82815260609283028501820192828201919087851115611baa57600080fd5b8387015b85811015611c035781818a031215611bc65760008081fd5b611bce61182b565b8135611bd981611b24565b815281860135611be881611b24565b81870152604082810135908201528452928401928101611bae565b5090979650505050505050565b600060208284031215611c2257600080fd5b81356001600160401b0380821115611c3957600080fd5b9083019060e08286031215611c4d57600080fd5b611c55611853565b611c5e83611b3c565b8152611c6c60208401611b3c565b6020820152604083013582811115611c8357600080fd5b611c8f87828601611933565b604083015250606083013560608201526080830135608082015260a083013582811115611cbb57600080fd5b611cc787828601611b6a565b60a083015250611cd960c08401611b3c565b60c082015295945050505050565b8015158114611b3957600080fd5b80356119a081611ce7565b600060208284031215611d1257600080fd5b81356001600160401b0380821115611d2957600080fd5b908301906101408286031215611d3e57600080fd5b611d46611875565b823581526020830135602082015260408301356040820152611d6a60608401611cf5565b606082015260808301356080820152611d8560a08401611b3c565b60a082015260c083013582811115611d9c57600080fd5b611da887828601611933565b60c083015250611dba60e08401611989565b60e08201526101008084013583811115611dd357600080fd5b611ddf88828701611933565b91830191909152506101209283013592810192909252509392505050565b600060208284031215611e0f57600080fd5b81356001600160401b03811115611e2557600080fd5b820160e08185031215611e3757600080fd5b9392505050565b600082601f830112611e4f57600080fd5b81356020611e5f61195283611b47565b82815260059290921b84018101918181019086841115611e7e57600080fd5b8286015b84811015611ebd5780356001600160401b03811115611ea15760008081fd5b611eaf8986838b0101611933565b845250918301918301611e82565b509695505050505050565b600060e08284031215611eda57600080fd5b611ee2611853565b905081356001600160401b0380821115611efb57600080fd5b611f0785838601611933565b83526020840135915080821115611f1d57600080fd5b611f2985838601611933565b6020840152611f3a60408501611989565b60408401526060840135915080821115611f5357600080fd5b611f5f85838601611933565b6060840152611f7060808501611989565b608084015260a0840135915080821115611f8957600080fd5b50611f9684828501611e3e565b60a083015250611fa860c08301611989565b60c082015292915050565b600060208284031215611fc557600080fd5b81356001600160401b03811115611fdb57600080fd5b611fe784828501611ec8565b949350505050565b6000602080838503121561200257600080fd5b82356001600160401b038082111561201957600080fd5b8185019150604080838803121561202f57600080fd5b612037611898565b83358381111561204657600080fd5b61205289828701611ec8565b825250848401358381111561206657600080fd5b80850194505087601f85011261207b57600080fd5b833561208961195282611b47565b81815260059190911b8501860190868101908a8311156120a857600080fd5b8787015b83811015612138578035878111156120c45760008081fd5b8801808d03601f19018713156120da5760008081fd5b6120e2611898565b8a820135898111156120f45760008081fd5b6121028f8d83860101611933565b82525087820135898111156121175760008081fd5b6121258f8d83860101611933565b828d0152508452509188019188016120ac565b509683019690965250979650505050505050565b60208082526021908201527f546f6b656e476174657761793a20556e617574686f72697a656420616374696f6040820152603760f91b606082015260800190565b600181811c908216806121a157607f821691505b6020821081036121c157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c9157600081815260208120601f850160051c810160208610156121ee5750805b601f850160051c820191505b818110156117db578281556001016121fa565b81516001600160401b0381111561222657612226611815565b61223a81612234845461218d565b846121c7565b602080601f83116001811461226f57600084156122575750858301515b600019600386901b1c1916600185901b1785556117db565b600085815260208120601f198616915b8281101561229e5788860151825594840194600190910190840161227f565b50858210156122bc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156122de57600080fd5b8151611e3781611b24565b60005b838110156123045781810151838201526020016122ec565b50506000910152565b600081518084526123258160208601602086016122e9565b601f01601f19169290920160200192915050565b60208152815160208201526020820151604082015260408201511515606082015260608201516080820152608082015160a0820152600060a083015160c080840152611fe760e084018261230d565b60006020828403121561239a57600080fd5b8151611e3781611ce7565b6001600160a01b03929092168252602082015260606040820181905260009082015260800190565b60008152600082516123e68160018501602087016122e9565b9190910160010192915050565b602081526000825160c0602084015261240f60e084018261230d565b90506020840151601f198085840301604086015261242d838361230d565b925060408601519150808584030160608601525061244b828261230d565b9150506001600160401b036060850151166080840152608084015160a084015260018060a01b0360a08501511660c08401528091505092915050565b60006020828403121561249957600080fd5b5051919050565b6000808335601e198436030181126124b757600080fd5b8301803591506001600160401b038211156124d157600080fd5b6020019150368190038213156124e657600080fd5b9250929050565b600080858511156124fd57600080fd5b8386111561250a57600080fd5b5050820193919092039150565b600060a0828403121561252957600080fd5b60405160a081018181106001600160401b038211171561254b5761254b611815565b80604052508235815260208301356020820152604083013561256c81611ce7565b6040820152606083810135908201526080928301359281019290925250919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016125e2576125e26125ba565b5060010190565b8082028115828204841417610d3657610d366125ba565b80820180821115610d3657610d366125ba565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156126635784516001600160a01b03168352938301939183019160010161263e565b50506001600160a01b03969096166060850152505050608001529392505050565b6000602080838503121561269757600080fd5b82516001600160401b038111156126ad57600080fd5b8301601f810185136126be57600080fd5b80516126cc61195282611b47565b81815260059190911b820183019083810190878311156126eb57600080fd5b928401925b82841015612709578351825292840192908401906126f0565b979650505050505050565b602080825260149082015273155b985d5d1a1bdc9a5e9959081c995c5d595cdd60621b604082015260600190565b60006020828403121561275457600080fd5b81356001600160401b038082111561276b57600080fd5b9083019060c0828603121561277f57600080fd5b6127876118ba565b823581526020830135602082015260408301356127a381611ce7565b80604083015250606083013560608201526080830135608082015260a0830135828111156127d057600080fd5b6127dc87828601611933565b60a08301525095945050505050565b6001600160a01b0383168152604060208201819052600090611fe79083018461230d565b6000806040838503121561282257600080fd5b82516001600160401b0381111561283857600080fd5b8301601f8101851361284957600080fd5b80516128576119528261190c565b81815286602083850101111561286c57600080fd5b61287d8260208301602086016122e9565b809450505050602083015161289181611ce7565b809150509250929050565b6000602082840312156128ae57600080fd5b611e3782611989565b604081528260408201528284606083013760006060848301015260006060601f19601f86011683010190506001600160401b0383166020830152949350505050565b60006020828403121561290b57600080fd5b81356001600160401b0381111561292157600080fd5b611fe784828501611b6a565b60006020828403121561293f57600080fd5b5035919050565b81810381811115610d3657610d366125ba565b60008261297657634e487b7160e01b600052601260045260246000fd5b50049056fea164736f6c6343000811000a";

type TokenGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenGateway__factory extends ContractFactory {
  constructor(...args: TokenGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(admin, overrides || {});
  }
  override deploy(
    admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(admin, overrides || {}) as Promise<
      TokenGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenGateway__factory {
    return super.connect(runner) as TokenGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenGatewayInterface {
    return new Interface(_abi) as TokenGatewayInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenGateway {
    return new Contract(address, _abi, runner) as unknown as TokenGateway;
  }
}
