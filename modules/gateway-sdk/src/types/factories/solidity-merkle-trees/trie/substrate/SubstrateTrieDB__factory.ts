/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SubstrateTrieDB,
  SubstrateTrieDBInterface,
} from "../../../../solidity-merkle-trees/trie/substrate/SubstrateTrieDB";

const _abi = [
  {
    inputs: [],
    name: "ALT_HASHING_BRANCH_WITH_MASK",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ALT_HASHING_LEAF_PREFIX_MASK",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BITMAP_LENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BRANCH_WITHOUT_MASK",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BRANCH_WITH_MASK",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EMPTY_TRIE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIRST_PREFIX",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HASH_lENGTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LEAF_PREFIX_MASK",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NIBBLE_PER_BYTE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NIBBLE_SIZE_BOUND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PADDING_BITMASK",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100be5760003560e01c8063a6429f021161007b578063a6429f0214610119578063ab1615b314610121578063bf5c57c314610129578063c4cd8bdb14610131578063c76f941114610139578063ff2227c51461013157600080fd5b8063290920c7146100c35780633413291b146100e25780633722beda146100f85780634bdc66bd1461010057806363a8dc5714610108578063761173c614610110575b600080fd5b6100cb60c081565b60405160ff90911681526020015b60405180910390f35b6100ea602081565b6040519081526020016100d9565b6100cb600f81565b6100cb601081565b6100ea600281565b6100ea61ffff81565b6100cb602081565b6100cb600281565b6100cb604081565b6100cb600081565b6100cb60808156fea164736f6c6343000811000a";

type SubstrateTrieDBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubstrateTrieDBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubstrateTrieDB__factory extends ContractFactory {
  constructor(...args: SubstrateTrieDBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SubstrateTrieDB & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SubstrateTrieDB__factory {
    return super.connect(runner) as SubstrateTrieDB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubstrateTrieDBInterface {
    return new Interface(_abi) as SubstrateTrieDBInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubstrateTrieDB {
    return new Contract(address, _abi, runner) as unknown as SubstrateTrieDB;
  }
}
