name: Rust

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check Workspace
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-C link-args=-Wl,--allow-multiple-definition"
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: recursive
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@v1
      - run: rustup target add wasm32-unknown-unknown --toolchain nightly
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
          repo-token: ${{ secrets.GH_TOKEN }}

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: check workspace
        run: | 
          cargo +nightly check --all --benches --locked
          cargo +nightly check -p sync-committee-verifier --no-default-features --target=wasm32-unknown-unknown --locked
          cargo +nightly check -p pallet-ismp --no-default-features --target=wasm32-unknown-unknown --locked
          cargo +nightly check -p ismp-demo --no-default-features --target=wasm32-unknown-unknown --locked

  check-runtime-wasm:
    name: Check Runtime Wasm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: recursive
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@v1
      - run: rustup target add wasm32-unknown-unknown

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: check runtime no-std
        run: cargo +nightly check -p hyperbridge-runtime --no-default-features --target=wasm32-unknown-unknown --locked

  fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Cargo fmt
        run: cargo +nightly fmt --all --check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    #    if: github.ref == 'refs/heads/main'
    env:
      TUID: 123
    steps:
      - name: set UID env
        run: |
          echo $UID
          echo "TUID=$UID" >> $GITHUB_ENV

      - name: Checkout sources
        uses: actions/checkout@master

      - name: Install rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - name: Install protoc
        run: |
          sudo apt update
          sudo apt install protobuf-compiler

      - name: Run pallet-ismp unit tests
        run: |
          cargo +nightly test -p pallet-ismp --all-targets --all-features --verbose --locked

      - name: Clone eth-pos-devnet repository
        run: |
          git clone https://github.com/polytope-labs/eth-pos-devnet.git
          cd eth-pos-devnet
          docker compose up -d
          ../scripts/wait_for_tcp_port_opening.sh localhost 3500 
          ../scripts/wait_for_tcp_port_opening.sh localhost 8545 

      - name: Run all tests
        run: |
          cargo +nightly test -p sync-committee-prover -- --nocapture
